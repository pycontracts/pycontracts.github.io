{"version":3,"sources":["webpack:///./src/components/Contact/Contact.js","webpack:///./src/pages/contact.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js","webpack:///./src/components/Article/Article.js","webpack:///./src/components/Article/index.js","webpack:///./src/components/Article/Headline.js"],"names":["FormItem","Form","Item","TextArea","Input","Contact","props","getFieldDecorator","form","handleSubmit","e","preventDefault","validateFields","err","values","console","log","_this","this","fetch","method","headers","Content-Type","body","data","Object","assign","form-name","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","handleNetworkError","sendMessage","react_default","a","createElement","Fragment","layouts","Consumer","theme","className","style_default","dynamic","color","brand","primary","form_default","name","onSubmit","data-netlify","data-netlify-honeypot","label","rules","whitespace","input_default","required","message","type","placeholder","autosize","minRows","maxRows","button_default","htmlType","styleId","css","propTypes","PropTypes","object","ContactForm","create","__webpack_require__","d","__webpack_exports__","query","ContactPage","facebook","site","siteMetadata","Article","Headline","title","components_Contact_Contact","Seo","isRequired","postTitle","frontmatter","postDescription","description","postCover","cover","postSlug","fields","slug","config","shortSiteTitle","siteTitle","siteDescription","image","siteImage","url","siteUrl","pathPrefix","Helmet_default","htmlAttributes","lang","siteLanguage","prefix","content","property","appId","authorTwitterAccount","components_Seo_Seo","children","space","inset","default","text","maxWidth","tablet","desktop","node","components_Article_Article","react__WEBPACK_IMPORTED_MODULE_1___default","styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default","font","size","xxl","stack","l","time","duration","long","weight","standard","xs","xl","string"],"mappings":"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","file":"component---src-pages-contact-js-9a9364a77418645e2f58.js","sourcesContent":["/* eslint no-unused-vars: 0 */\r\n\r\nimport { navigate } from \"gatsby\";\r\nimport Button from \"antd/lib/button\";\r\nimport Form from \"antd/lib/form\";\r\nimport Input from \"antd/lib/input\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\nimport \"antd/lib/form/style/index.css\";\r\nimport \"antd/lib/input/style/index.css\";\r\nimport \"antd/lib/button/style/index.css\";\r\nimport { ThemeContext } from \"../../layouts\";\r\n\r\nconst Contact = props => {\r\n  const { getFieldDecorator } = props.form;\r\n\r\n  function encode(data) {\r\n    return Object.keys(data)\r\n      .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\r\n      .join(\"&\");\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        sendMessage(values);\r\n      }\r\n    });\r\n  }\r\n\r\n  function sendMessage(values) {\r\n    fetch(\"/\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: encode({ \"form-name\": \"contact\", ...values })\r\n    })\r\n      .then(() => {\r\n        console.log(\"Form submission success\");\r\n        navigate(\"/success\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Form submission error:\", error);\r\n        this.handleNetworkError();\r\n      });\r\n  }\r\n\r\n  function handleNetworkError(e) {\r\n    console.log(\"submit Error\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <div className=\"form\">\r\n            <Form\r\n              name=\"contact\"\r\n              onSubmit={handleSubmit}\r\n              data-netlify=\"true\"\r\n              data-netlify-honeypot=\"bot-field\"\r\n            >\r\n              <FormItem label=\"Name\">\r\n                {getFieldDecorator(\"name\", {\r\n                  rules: [\r\n                    {\r\n                      whitespace: true\r\n                    }\r\n                  ]\r\n                })(<Input name=\"name\" />)}\r\n              </FormItem>\r\n              <FormItem label=\"E-mail\">\r\n                {getFieldDecorator(\"email\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your e-mail address!\",\r\n                      whitespace: true,\r\n                      type: \"email\"\r\n                    }\r\n                  ]\r\n                })(<Input name=\"email\" />)}\r\n              </FormItem>\r\n              <FormItem label=\"Message\">\r\n                {getFieldDecorator(\"message\", {\r\n                  rules: [\r\n                    { required: true, message: \"Please input your message!\", whitespace: true }\r\n                  ]\r\n                })(\r\n                  <TextArea name=\"message\" placeholder=\"\" autosize={{ minRows: 4, maxRows: 10 }} />\r\n                )}\r\n              </FormItem>\r\n              <FormItem>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </FormItem>\r\n            </Form>\r\n\r\n            {/* --- STYLES --- */}\r\n            <style jsx>{`\r\n              .form {\r\n                background: transparent;\r\n              }\r\n              .form :global(.ant-row.ant-form-item) {\r\n                margin: 0 0 1em;\r\n              }\r\n              .form :global(.ant-row.ant-form-item:last-child) {\r\n                margin-top: 1em;\r\n              }\r\n              .form :global(.ant-form-item-control) {\r\n                line-height: 1em;\r\n              }\r\n              .form :global(.ant-form-item-label) {\r\n                line-height: 1em;\r\n                margin-bottom: 0.5em;\r\n              }\r\n              .form :global(.ant-form-item) {\r\n                margin: 0;\r\n              }\r\n              .form :global(.ant-input) {\r\n                appearance: none;\r\n                height: auto;\r\n                font-size: 1.2em;\r\n                padding: 0.5em 0.6em;\r\n              }\r\n              .form :global(.ant-btn-primary) {\r\n                height: auto;\r\n                font-size: 1.2em;\r\n                padding: 0.5em 3em;\r\n                background: ${theme.color.brand.primary};\r\n                border: 1px solid ${theme.color.brand.primary};\r\n              }\r\n              .form :global(.ant-form-explain) {\r\n                margin-top: 0.2em;\r\n              }\r\n\r\n              @from-width desktop {\r\n                .form :global(input) {\r\n                  max-width: 50%;\r\n                }\r\n              }\r\n            `}</style>\r\n          </div>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  form: PropTypes.object\r\n};\r\n\r\nconst ContactForm = Form.create({})(Contact);\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { ThemeContext } from \"../layouts\";\r\nimport Article from \"../components/Article\";\r\nimport Contact from \"../components/Contact\";\r\nimport Headline from \"../components/Article/Headline\";\r\nimport Seo from \"../components/Seo\";\r\n\r\nconst ContactPage = props => {\r\n  const {\r\n    data: {\r\n      site: {\r\n        siteMetadata: { facebook }\r\n      }\r\n    }\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <Article theme={theme}>\r\n            <header>\r\n              <Headline title=\"Contact\" theme={theme} />\r\n            </header>\r\n            <Contact theme={theme} />\r\n          </Article>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n\r\n      <Seo facebook={facebook} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nContactPage.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ContactPage;\r\n\r\n//eslint-disable-next-line no-undef\r\nexport const query = graphql`\r\n  query ContactQuery {\r\n    site {\r\n      siteMetadata {\r\n        facebook {\r\n          appId\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../../content/meta/config\";\r\n\r\nconst Seo = props => {\r\n  const { data, facebook } = props;\r\n  const postTitle = ((data || {}).frontmatter || {}).title;\r\n  const postDescription = ((data || {}).frontmatter || {}).description;\r\n  const postCover = ((data || {}).frontmatter || {}).cover;\r\n  const postSlug = ((data || {}).fields || {}).slug;\r\n\r\n  const title = postTitle ? `${postTitle} - ${config.shortSiteTitle}` : config.siteTitle;\r\n  const description = postDescription ? postDescription : config.siteDescription;\r\n  const image = postCover ? postCover : config.siteImage;\r\n  const url = config.siteUrl + config.pathPrefix + postSlug;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang: config.siteLanguage,\r\n        prefix: \"og: http://ogp.me/ns#\"\r\n      }}\r\n    >\r\n      {/* General tags */}\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      {/* OpenGraph tags */}\r\n      <meta property=\"og:url\" content={url} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"fb:app_id\" content={facebook.appId} />\r\n      {/* Twitter Card tags */}\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={config.authorTwitterAccount ? config.authorTwitterAccount : \"\"}\r\n      />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nSeo.propTypes = {\r\n  data: PropTypes.object,\r\n  facebook: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Seo;\r\n","export { default } from \"./Seo\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Article = props => {\r\n  const { children, theme } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <article className=\"article\">{children}</article>\r\n\r\n      {/* --- STYLES --- */}\r\n      <style jsx>{`\r\n        .article {\r\n          padding: ${theme.space.inset.default};\r\n          margin: 0 auto;\r\n        }\r\n        @from-width tablet {\r\n          .article {\r\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\r\n            max-width: ${theme.text.maxWidth.tablet};\r\n          }\r\n        }\r\n        @from-width desktop {\r\n          .article {\r\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${\r\n              theme.space.default\r\n            } * 2)`};\r\n            max-width: ${theme.text.maxWidth.desktop};\r\n          }\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Article;\r\n","export { default } from \"./Article\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Headline = props => {\r\n  const { title, children, theme } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\r\n\r\n      {/* --- STYLES --- */}\r\n      <style jsx>{`\r\n        h1 {\r\n          font-size: ${theme.font.size.xxl};\r\n          margin: ${theme.space.stack.l};\r\n          animation-name: headlineEntry;\r\n          animation-duration: ${theme.time.duration.long};\r\n\r\n          :global(span) {\r\n            font-weight: ${theme.font.weight.standard};\r\n            display: block;\r\n            font-size: 0.5em;\r\n            letter-spacing: 0;\r\n            margin: ${theme.space.stack.xs};\r\n          }\r\n\r\n          :global(svg) {\r\n            height: 0.75em;\r\n            fill: ${theme.color.brand.primary};\r\n          }\r\n        }\r\n\r\n        @keyframes headlineEntry {\r\n          from {\r\n            opacity: 0.5;\r\n          }\r\n          to {\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        @from-width tablet {\r\n          h1 {\r\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\r\n          }\r\n        }\r\n\r\n        @from-width desktop {\r\n          h1 {\r\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\r\n          }\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nHeadline.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Headline;\r\n"],"sourceRoot":""}